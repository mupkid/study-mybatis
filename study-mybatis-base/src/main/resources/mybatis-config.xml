<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- 标签有固定的顺序，不能随便放，规定 properties, settings, typeAliases, typeHandlers, environments, mappers-->

    <!-- 引入 properties 文件，就能以 ${属性名} 的方式访问属性值 -->
    <properties resource="jdbc.properties"/>

    <settings>
        <!-- 将表中字段的下划线自动转换为驼峰 -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!-- 日志输出 -->
        <setting name="logImpl" value="SLF4J"/>
        <!-- 延迟加载-->
        <setting name="lazyLoadingEnabled" value="true"/>
    </settings>

    <!-- environments：配置多个数据库连接的环境
         属性：default：设置默认使用的环境的 id
    -->
    <environments default="development">
        <!-- environments：配置某个具体的环境
             属性：id：环境的唯一标识，不能重复
        -->
        <environment id="development">
            <!-- transactionManager 设置事务管理方式
                 属性 type = JDBC|MANAGED，
                     JDBC：使用JDBC中原生的事务管理方式，事务提交或回滚需要手动处理
                     MANAGED：事务被管理，例如由 Spring 管理 MyBatis 的事务
            -->
            <transactionManager type="JDBC"/>
            <!-- dataSource 配置数据源
                 属性 type = POOLED|UNPOOLED|JNDI，数据源的类型
                     POOLED：使用数据库连接池缓存连接
                     UNPOOLED：不使用数据库连接池
                     JNDI：使用上下文中的数据源
            -->
            <dataSource type="POOLED">
                <property name="driver" value="${datasource.master.driver}"/>
                <property name="url" value="${datasource.master.url}"/>
                <property name="username" value="${datasource.master.username}"/>
                <property name="password" value="${datasource.master.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 所有的 mapper.xml 文件-->
    <mappers>
        <!-- 使用这种方式要求程序打包后接口与XML文件在相同的路径下，且文件名相同，因此很不推荐 -->
        <package name="org.ohx.studymybatis.dal.mapper"/>
    </mappers>
</configuration>